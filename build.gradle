/*
 * This file was generated by the Gradle 'init' task.
 *
 * This generated file contains a sample Java Library project to get you started.
 * For more details take a look at the Java Libraries chapter in the Gradle
 * User Manual available at https://docs.gradle.org/6.2.2/userguide/java_library_plugin.html
 */

plugins {
    // Apply the java-library plugin to add support for Java Library
    id 'java-library'
    id "com.gradle.plugin-publish" version "0.11.0"
    id "java-gradle-plugin"
}

def ROBOT_MAIN_CLASS = "JoyconLib.JoyconExample"

repositories {
    // Use jcenter for resolving dependencies.
    // You can declare any Maven/Ivy/file repository here.
    jcenter()
    mavenCentral()
    flatDir {
       dirs 'libs'
    }
}

dependencies {
    // This dependency is exported to consumers, that is to say found on their compile classpath.
    api 'org.apache.commons:commons-math3:3.6.1'

    // This dependency is used internally, and not exposed to consumers on their own compile classpath.
    implementation 'com.google.guava:guava:28.1-jre'

    // Use JUnit test framework
    testImplementation 'junit:junit:4.12'

    compile group: 'net.java.dev.jna', name: 'jna', version: '4.0.0'
    compile group: 'io.github.vveird', name: 'purejavahidapi', version: '0.0.3'
}

pluginBundle {
    website = 'https://github.com/LakshBhambhani/Java-Joycon'
    vcsUrl = 'https://github.com/LakshBhambhani/Java-Joycon.git'
    tags = ['joycon', 'joycons', 'nintendo', 'games']
}
gradlePlugin {
    plugins {
        joyconPlugin {
            id = 'com.laksh.JoyconLib'
            displayName = 'Plugin for using the Nintendo Joycons with Java Applications.'
            description = 'Plugin for using the Nintendo Joycons with Java Applications. Supports buttons and joysticks, battery & rumble. IMU under testing and NFC/IR will come soon.'
            implementationClass = 'JoyconLib.Joycon'
            version = '1.1'
        }
    }
}

jar{
    from configurations.compile.collect { it.isDirectory() ? it : zipTree(it) }
    // I need to set my manifest up so the coprocessor knows where my main class is
    manifest {
        attributes 'Main-Class': ROBOT_MAIN_CLASS
    }
}


